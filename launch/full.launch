<!--This file launches either a bag or a simulation and the point-cloud converter.--> 
<!--  Newtorks can be launched through the desiccation_cnn package -->
<!--  -->
<launch>
  <!-- <arg name="debug" default="true"/> -->
  <!-- Simulation arguments -->
  <arg name="simulation" default="false"/>
  <arg name="control" default="false"/>
  <arg name="world" default="serf"/>
  <arg name="mode" default="hybrid-freq"/>
  <arg name="rate" default="1"/>
  <!-- Values for the camera calibration file -->
  <arg name="out_width" default="256"/> <!-- 1920 / 256 / 128 --> 
  <arg name="out_height" default="192"/> <!-- 1080 / 192 / 96 -->
  <arg name="static_tf" default="False"/>
  <!-- Visualisation -->
  <arg name="rviz" default="True"/>
  <!-- Frames -->
  <arg name="pcl_topic" default="pcl_plane"/>
  <arg name="world_frame" default="map"/>
  <!-- Arguments for the quadmap -->
  <arg name="max_depth" default="10"/>
  <arg name="qt_scale" default="70"/>
  
  <!-- Argument for tf throttle -->
  <arg name="throttle" default="false"/>
  <arg unless="$(arg throttle)" name="throttle_topic" value=""/>
  <arg if="$(arg throttle)" name="throttle_topic" value="/tf_throttle:=/tf"/>

  <!-- Setting the names depending on Simulation / Rosbag  -->
  <arg if="$(arg simulation)" name="camera_name" default="/hbv_1615"/>
  <arg if="$(arg simulation)" name="image_topic" default="$(arg camera_name)/image_color"/>
  <arg if="$(arg simulation)" name="camera_frame" default="hbv_1615_link"/>
  <arg unless="$(arg simulation)" name="camera_name" default="/scouter_vision"/>
  <arg unless="$(arg simulation)" name="image_topic" default="$(arg camera_name)/image_raw"/>
  <arg unless="$(arg simulation)" name="camera_frame" default="oak_d_link"/>
  <arg name="info_topic" default="$(arg camera_name)/camera_info"/>
   
  <!-- Simulation or rosbag -->
  <!-- Rosbag -->
  <node unless="$(arg simulation)" pkg="rosbag" type="play" required="true" name="player" output="screen" args="--clock -r $(arg rate) $(find quadmap)/rosbag/$(arg mode).bag $(arg throttle_topic)"/>
  
  <!-- Simulation -->
  <include if="$(arg simulation)" file="$(find desiccation_cnn)/launch/simulation.launch">
      <arg name="world" value="$(arg world)"/>
  </include>
  <!-- Control -->
  <include if="$(arg control)" file="$(find uas_offboard_planner)/launch/hardware_control.launch"/>

  <!-- The pcl file - uses cascaded calibration file -->
  <include file="$(find learning_image_geometry)/launch/pcl.launch">
    <arg name="camera_name" value="$(arg camera_name)"/>
    <arg name="out_width" value="$(arg out_width)"/>
    <arg name="out_height" value="$(arg out_height)"/>
    <arg name="static_tf" value="$(arg static_tf)"/>
    <arg name="camera_frame" value="$(arg camera_frame)"/>
    <arg name="pcl_topic" value="$(arg pcl_topic)"/>
    <arg name="world_frame" value="$(arg world_frame)"/>
    <arg name="info_topic" value="$(arg info_topic)"/>
    <arg name="image_topic" value="$(arg image_topic)"/>
    <arg name="simulation" value="$(arg simulation)"/>
  </include>
  
  <!-- RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" output="screen" name="rviz" respawn="true" args="-d $(find quadmap)/config/rviz_pcl_color.rviz"/>

  <!-- New transform to make all the values positive -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="tf_new" args="0 0 0 1.57 0 0 positive_local_origin local_origin 30"/> -->

  <!-- The python node running the quadtree -->
  <param name="qt_scale" type="int" value="$(arg qt_scale)"/>
  <param name="max_depth" type="int" value="$(arg max_depth)"/>
  <!-- <node pkg="quadmap" type="quadtree_node.py" name="quadtree_node" output="screen"/> -->
</launch>
